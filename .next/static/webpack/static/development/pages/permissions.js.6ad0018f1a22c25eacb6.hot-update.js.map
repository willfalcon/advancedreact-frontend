{"version":3,"file":"static/webpack/static/development/pages/permissions.js.6ad0018f1a22c25eacb6.hot-update.js","sources":["webpack:///./components/Permissions.js"],"sourcesContent":["import { Query, Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\n\nimport Error from './ErrorMessage';\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\n\nconst possiblePermissions = [\n  'ADMIN',\n  'USER',\n  'ITEMCREATE',\n  'ITEMUPDATE',\n  'ITEMDELETE',\n  'PERMISSIONUPDATE'\n];\n\nconst UPDATE_PERMISSIONS_MUTATION = gql`\n  mutation updatePermissions($permissions: [Permission], $userId: ID!) {\n    updatedPermissions(permissions: $permissions, userId: $userId) {\n      id\n      permissions\n      name\n      email\n    }\n  }\n`;\n\nconst ALL_USERS_QUERY = gql`\n  query {\n    users {\n      id\n      name\n      email\n      permissions\n    }\n  }\n`;\n\nconst Permissions = props => {\n  return (\n    <Query query={ALL_USERS_QUERY}>\n      {({ data, loading, error }) => (\n        <div>\n          <Error error={error} />\n          <div>\n            <h2>Manage Permissions</h2>\n            <Table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Email</th>\n                  {possiblePermissions.map(permission => (\n                    <th key={permission}>{permission}</th>\n                  ))}\n                  <th>ðŸ‘‡</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.users.map(user => (\n                  <UserPermissions user={user} key={user.id} />\n                ))}\n              </tbody>\n            </Table>\n          </div>\n        </div>\n      )}\n    </Query>\n  );\n};\n\nclass UserPermissions extends React.Component {\n  static propTypes = {\n    user: PropTypes.shape({\n      name: PropTypes.string,\n      email: PropTypes.string,\n      id: PropTypes.string,\n      permissions: PropTypes.array\n    }).isRequired\n  };\n  state = {\n    permissions: this.props.user.permissions\n  };\n  handlePermissionChange = e => {\n    const checkbox = e.target;\n    // take a copy of the current permissions\n    let updatedPermissions = [...this.state.permissions];\n    // figre otu if we need to remove or ad this permission\n    if (checkbox.checked) {\n      //add it in\n      updatedPermissions.push(checkbox.value);\n    } else {\n      updatedPermissions = updatedPermissions.filter(\n        permission => permission !== checkbox.value\n      );\n    }\n    this.setState({ permissions: updatedPermissions });\n    console.log(updatedPermissions);\n  };\n  render() {\n    const user = this.props.user;\n    return (\n      <Mutation\n        mutation={UPDATE_PERMISSIONS_MUTATION}\n        variables={{\n          permissions: this.state.permissions,\n          userId: this.props.user.id\n        }}\n      >\n        {(updatePermissions, { loading, error }) => (\n          <tr>\n            <td>{user.name}</td>\n            <td>{user.email}</td>\n            {possiblePermissions.map(permission => (\n              <td key={permission}>\n                <label htmlFor={`${user.id}-permission-${permission}`}>\n                  <input\n                    id={`${user.id}-permission-${permission}`}\n                    type=\"checkbox\"\n                    checked={this.state.permissions.includes(permission)}\n                    value={permission}\n                    onChange={this.handlePermissionChange}\n                  />\n                </label>\n              </td>\n            ))}\n            <td>\n              <SickButton \n                type=\"button\"\n                disabled={loading}\n                onClick={updatePermissions}\n              >Update</SickButton>\n            </td>\n          </tr>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default Permissions;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AASA;AAWA;AACA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAjBA;AA2BA;AACA;AACA;;;;;;;;;;;;;;;;;;AASA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBA;AA4BA;;;;AAlEA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AAmEA;;;;A","sourceRoot":""}